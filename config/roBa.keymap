#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 11>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 2>;
        };

        gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 1 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp G &kp A>;
        };

        macro2: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp S &kp H>;
        };

        macro3: macro3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp S &kp F>;
        };

        macro4: macro4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp S &kp O>;
        };

        macro5: macro5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp F &kp C>;
        };

        macro6: macro6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H>;
        };

        macro7: macro7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp LS(P) &kp N0 &kp N7 &kp N9 &kp N9 &kp N5 &kp LEFT_BRACKET &kp J &kp S &kp O &kp L &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "MACRO7";
        };

        macro8: macro8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp LS(P) &kp N0 &kp N7 &kp N9 &kp N9 &kp N5>;
            label = "MACRO8";
        };

        macro9: macro9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp N5 &kp N5 &kp N2 &kp N3>;
            label = "MACRO9";
        };

        macro10: macro10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp N0 &kp N2 &kp N0 &kp N3 &kp N2 &kp N2 &kp N5 &kp N5 &kp N2 &kp N3>;
            label = "MACRO10";
        };

        macro11: macro11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp N0 &kp N2 &kp N0 &kp N3 &kp N2 &kp N2>;
            label = "MACRO11";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W             &kp E           &kp R  &kp T                                                  &kp Y           &kp U  &lt 5 I    &kp O    &kp P
&kp A  &kp S             &kp D           &kp F  &kp G     &kp RIGHT_BRACKET      &kp BACKSLASH         &kp H           &kp J  &kp K      &kp L    &mkp MB2
&kp Z  &kp X             &kp C           &kp V  &kp B     &kp ASTRK              &kp LEFT_PARENTHESIS  &kp N           &kp M  &kp COMMA  &kp DOT  &mkp MB1
&mo 5  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &mo 1  &mkp MB1  &mo 2                  &kp LEFT_CONTROL      &kp LEFT_SHIFT                             &mo 5
            >;
        };

        FUNCTION {
            bindings = <
&kp LA(TILDE)  &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &macro6     &macro5                                       &kp LC(X)  &kp LC(D)       &kp LC(Y)       &kp LC(Z)  &kp DEL
&kp ESC        &macro4           &macro3            &macro2     &macro1        &trans              &trans     &kp LC(C)  &kp LC(V)       &kp UP_ARROW    &trans     &kp BACKSPACE
&kp LEFT_GUI   &kp LEFT_ALT      &kp TAB            &kp K_MENU  &kp LS(LG(S))  &kp LEFT_BRACE      &kp PIPE   &kp LC(G)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp MINUS
&trans         &kp LEFT_CONTROL  &kp LEFT_SHIFT     &trans      &trans         &trans              &kp ENTER  &kp SPACE                                             &kp LS(SEMICOLON)
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_9  &kp NUMBER_8      &kp NUMBER_7    &kp NUMBER_6  &kp NUMBER_5                      &kp DOUBLE_QUOTES  &kp HASH         &kp PERCENT  &kp DOUBLE_QUOTES  &kp MINUS
&kp NUMBER_4  &kp NUMBER_3      &kp NUMBER_2    &kp NUMBER_1  &kp NUMBER_0  &trans      &trans  &kp SEMICOLON      &kp QUESTION     &kp DOLLAR   &kp SLASH          &kp UNDER
&kp PIPE      &kp GRAVE         &kp AMPERSAND   &kp CARET     &kp TILDE     &trans      &trans  &kp APOS           &kp EXCLAMATION  &kp INT_YEN  &kp UNDER          &kp AMPERSAND
&trans        &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans        &trans        &trans      &trans  &trans                                                              &kp LEFT_BRACKET
            >;
        };

        ARROW {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans  &trans  &trans  &trans
&kp F10       &kp F7            &kp F5          &kp F4        &kp F2        &trans      &trans  &kp F1  &kp F3  &kp F6  &kp F8  &kp F9
&macro11      &macro10          &macro9         &macro8       &macro7       &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans        &trans        &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans            &trans          &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans            &trans          &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans            &trans          &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans  &trans  &trans  &trans
&kp F10       &kp F7            &kp F5          &kp F4        &kp F2        &trans      &trans  &kp F1  &kp F3  &kp F6  &kp F8  &kp F9
&macro11      &macro10          &macro9         &macro8       &macro7       &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans        &trans        &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
